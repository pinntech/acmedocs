components:
  parameters:
    userIdParameter:
      description: ID of the user to perform action on
      in: path
      name: user_id
      required: true
      schema:
        type: string
  responses:
    userResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      description: Pinn user model resposne
    usersResponseBody:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
      description: Pinn user model list
  schemas:
    User:
      example:
        created: 1532377393
        external_id: dwesterho
        metadata:
          first_name: Dave
        object: user
        user_id: usr_DHk2LprqBR97iE
      properties:
        created:
          description: 'The number of seconds in UTC since the unix epoch, which represents the time of creation'
          type: integer
        external_id:
          description: 'Unique identifier supplied by the caller of the API to provide an index external to Pinn to query the user object. Typically this is a user ID, username or email address. When using an external ID that is subject to change such as an email or username is imperitive the Pinn user is updated to reflect the change.'
          type: string
        metadata:
          type: object
        object:
          description: String representing the object's type. Objects of the same type share the same value
          type: string
        user_id:
          description: 'Universally unique immutable identifier for the Pinn user, generated upon creation of the user object'
          type: string
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Bearer <secret_key>
      scheme: bearer
      type: http
info:
  contact:
    email: support@pinn.ai
    name: Pinn Developer Support
    url: 'https://pinn.ai/support'
  description: TODO
  license:
    name: 'Pinn Technologies, Inc. All rights reserved'
    url: 'https://pinn.ai/license'
  termsOfService: 'https://pinn.ai/tos/'
  title: Pinn API
  version: "1.0.5"
openapi: 3.0.0
paths:
  /users:
    get:
      description: Retrieve a list of created users
      operationId: listUsers
      responses:
        '200':
          $ref: '#/components/responses/usersResponseBody'
      summary: List Users
      tags:
        - users
    post:
      description: Create a new Pinn user object
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              example:
                external_id: dmwesterhoff
                metadata:
                  first_name: David
              properties:
                external_id:
                  type: string
                metadata:
                  type: object
              required:
                - external_id
              type: object
      responses:
        '200':
          $ref: '#/components/responses/userResponseBody'
      summary: Create User
      tags:
        - users
  '/users/{user_id}':
    delete:
      description: Delete the user and all associated data with a given Pinn user ID
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '204':
          description: User was successfully deleted
      summary: Delete User
      tags:
        - users
    get:
      description: Retrieve a user by their Pinn user ID
      operationId: retrieveUser
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '204':
          $ref: '#/components/responses/userResponseBody'
      summary: Retrieve User
      tags:
        - users
    patch:
      description: Update the user external ID and/or metadata
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              example:
                external_id: dmwesterhoff
                metadata:
                  first_name: David
              properties:
                external_id:
                  type: string
                metadata:
                  type: object
              type: object
      responses:
        '200':
          $ref: '#/components/responses/userResponseBody'
      summary: Update User
      tags:
        - users
security:
  - basicAuth: []
  - bearerAuth: []
servers:
  - description: Development Host
    url: 'https://development.pinnapis.com'
  - description: Staging Host
    url: 'https://staging.pinnapis.com'
  - description: Production Host
    url: 'https://pinnapis.com'
tags:
  - description: 'Create, retrieve, update, list and delete users'
    name: users
  - description: 'Add, remove and modify user device objects'
    name: devices